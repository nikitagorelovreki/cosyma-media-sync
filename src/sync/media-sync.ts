import { MediaItem, NormalizedLink, SyncResult, Config } from '../types';
import { LinkNormalizer } from '../input/links';
import { ProviderFactory } from '../providers/factory';
import { WeeekClient } from '../weeek/client';
import { TaskBuilder } from '../weeek/task-builder';

export class MediaSync {
  private readonly config: Config;
  private readonly weeekClient: WeeekClient;

  constructor(config: Config) {
    this.config = config;
    this.weeekClient = new WeeekClient(config);
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
   */
  async sync(inputLinks: string[], isDryRun: boolean = false): Promise<SyncResult> {
    console.log(`–ù–∞—á–∏–Ω–∞—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é ${inputLinks.length} —Å—Å—ã–ª–æ–∫...`);
    if (isDryRun) {
      console.log('‚ö†Ô∏è  –†–µ–∂–∏–º DRY-RUN - –∑–∞–¥–∞—á–∏ –Ω–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã');
    }

    const result: SyncResult = {
      created: 0,
      skipped: 0,
      errors: []
    };

    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å WEEEK
      console.log('–ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å WEEEK...');
      if (!await this.weeekClient.testConnection()) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WEEEK API');
      }
      console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å WEEEK —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

      // 2. –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π
      console.log('–ü—Ä–æ–≤–µ—Ä—è—é –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è...');
      // –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π
      const customFieldIds = await this.weeekClient.ensureCustomFields();
      console.log('üîß –ü–æ–ª—É—á–µ–Ω—ã ID –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π:', customFieldIds);
      console.log('‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –≥–æ—Ç–æ–≤—ã');

      // 3. –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º —Å—Å—ã–ª–∫–∏
      console.log('–ù–æ—Ä–º–∞–ª–∏–∑—É—é —Å—Å—ã–ª–∫–∏...');
      const validLinks = LinkNormalizer.validateLinks(inputLinks);
      if (validLinks.length === 0) {
        throw new Error('–ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
      }
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${validLinks.length} –≤–∞–ª–∏–¥–Ω—ã—Ö —Å—Å—ã–ª–æ–∫`);

      // 4. –°–æ–±–∏—Ä–∞–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã
      console.log('–°–æ–±–∏—Ä–∞—é –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã...');
      const allMediaItems = await this.collectMediaItems(validLinks);
      console.log(`‚úÖ –°–æ–±—Ä–∞–Ω–æ ${allMediaItems.length} –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤`);

      // 5. –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã
      const mediaItems = allMediaItems.filter(item => 
        item.mediaType === 'photo' || item.mediaType === 'video'
      );
      console.log(`‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${mediaItems.length} –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤`);

      if (isDryRun) {
        // –í —Ä–µ–∂–∏–º–µ dry-run –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–ª–∞–Ω
        await this.showDryRunPlan(mediaItems, customFieldIds);
        return result;
      }

      // 6. –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ WEEEK
      console.log('–°–æ–∑–¥–∞—é –∑–∞–¥–∞—á–∏ –≤ WEEEK...');
      if (this.config.weeekSpaceOrProjectId) {
        console.log(`üìÅ –ü—Ä–æ–µ–∫—Ç: ${this.config.weeekSpaceOrProjectId}`);
      } else {
        console.log('‚ö†Ô∏è  ID –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω - –∑–∞–¥–∞—á–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–º –ø—Ä–æ–µ–∫—Ç–µ');
      }
      const syncResult = await this.createTasks(mediaItems, customFieldIds);
      
      result.created = syncResult.success;
      result.skipped = syncResult.failed;
      result.errors = syncResult.errors.map(error => ({ url: 'TASK_CREATION', error }));

      console.log(`‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: ${result.created} —Å–æ–∑–¥–∞–Ω–æ, ${result.skipped} –ø—Ä–æ–ø—É—â–µ–Ω–æ`);
      
    } catch (error) {
      const errorMsg = `–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
      console.error(errorMsg);
      result.errors.push({ url: 'SYSTEM', error: errorMsg });
    }

    return result;
  }

  /**
   * –°–æ–±–∏—Ä–∞–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏–∑ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫
   */
  public async collectMediaItems(links: string[]): Promise<MediaItem[]> {
    const allItems: MediaItem[] = [];
    
    for (let i = 0; i < links.length; i++) {
      const link = links[i];
      console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É ${i + 1}/${links.length}: ${link}`);
      
      try {
        const normalizedLink = LinkNormalizer.normalize(link);
        const provider = ProviderFactory.getProviderForUrl(link);
        
        const items = await provider.listMediaItems(link, normalizedLink.provider);
        allItems.push(...items);
        
        console.log(`  ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${items.length} —Ñ–∞–π–ª–æ–≤`);
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        if (i < links.length - 1 && this.config.requestDelayMs > 0) {
          await new Promise(resolve => setTimeout(resolve, this.config.requestDelayMs));
        }
        
      } catch (error) {
        const errorMsg = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏ "${link}": ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
        console.error(`  ‚ùå ${errorMsg}`);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Å—Å—ã–ª–æ–∫
      }
    }
    
    return allItems;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∑–∞–¥–∞—á–∏ –≤ WEEEK
   */
  private async createTasks(
    mediaItems: MediaItem[], 
    customFieldIds: { sourceUrlId: string; originalDateId: string; mediaTypeId: string; }
  ): Promise<{ success: number; failed: number; errors: string[] }> {
    const tasksToCreate: any[] = [];
    let skippedCount = 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –∏ —Å—Ç—Ä–æ–∏–º –Ω–æ–≤—ã–µ
    for (let i = 0; i < mediaItems.length; i++) {
      const item = mediaItems[i];
      console.log(`–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –∑–∞–¥–∞—á—É ${i + 1}/${mediaItems.length}: ${item.fileName}`);
      
      try {
        const dedupId = TaskBuilder.buildDedupId(item);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –∑–∞–¥–∞—á–∞
        // –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const linkToCheck = item.directUrl || item.sourcePublicUrl;
        if (await this.weeekClient.taskExists(item.fileName, linkToCheck)) {
          console.log(`  ‚è≠Ô∏è  –ó–∞–¥–∞—á–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞—é`);
          skippedCount++;
          continue;
        }
        
        // –°—Ç—Ä–æ–∏–º –∑–∞–¥–∞—á—É
        const task = TaskBuilder.buildTask(item, {
          customFieldIds,
          projectId: this.config.weeekSpaceOrProjectId
        });
        
        tasksToCreate.push(task);
        console.log(`  ‚úÖ –ó–∞–¥–∞—á–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞`);
        
      } catch (error) {
        const errorMsg = `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∑–∞–¥–∞—á–∏ –¥–ª—è "${item.fileName}": ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
        console.error(`  ‚ùå ${errorMsg}`);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤
      }
    }
    
    console.log(`–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ ${tasksToCreate.length} –∑–∞–¥–∞—á –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è, –ø—Ä–æ–ø—É—â–µ–Ω–æ ${skippedCount} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤`);
    
    if (tasksToCreate.length === 0) {
      return { success: 0, failed: 0, errors: [] };
    }
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –±–∞—Ç—á–∞–º–∏
    const batchResult = await this.weeekClient.createTasksBatch(tasksToCreate, this.config.maxTasksPerBatch);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã –∫ –æ–±—â–µ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    return {
      success: batchResult.success,
      failed: batchResult.failed + skippedCount,
      errors: batchResult.errors
    };
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–ª–∞–Ω —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ —Ä–µ–∂–∏–º–µ dry-run
   */
  private async showDryRunPlan(
    mediaItems: MediaItem[], 
    customFieldIds: { sourceUrlId: string; originalDateId: string; mediaTypeId: string; }
  ): Promise<void> {
    console.log('\nüìã –ü–õ–ê–ù –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:');
    console.log('=' .repeat(80));
    
    let newTasksCount = 0;
    let existingTasksCount = 0;
    
    for (let i = 0; i < mediaItems.length; i++) {
      const item = mediaItems[i];
      const dedupId = TaskBuilder.buildDedupId(item);
      const task = TaskBuilder.buildTask(item, {
        customFieldIds,
        projectId: this.config.weeekSpaceOrProjectId
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∑–∞–¥–∞—á–∞
      const linkToCheck = item.directUrl || item.sourcePublicUrl;
      const exists = await this.weeekClient.taskExists(item.fileName, linkToCheck);
      
      if (exists) {
        console.log(`${i + 1}. ${task.title} ‚è≠Ô∏è  –£–ñ–ï –°–£–©–ï–°–¢–í–£–ï–¢`);
        existingTasksCount++;
      } else {
        console.log(`${i + 1}. ${task.title} ‚úÖ –ë–£–î–ï–¢ –°–û–ó–î–ê–ù–ê`);
        newTasksCount++;
      }
      
      console.log(`   –°—Å—ã–ª–∫–∞: ${item.sourcePublicUrl}`);
      if (this.config.weeekSpaceOrProjectId) {
        console.log(`   –ü—Ä–æ–µ–∫—Ç: ${this.config.weeekSpaceOrProjectId}`);
      }
      console.log('');
    }
    
    console.log(`üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
    console.log(`   –ù–æ–≤—ã—Ö –∑–∞–¥–∞—á: ${newTasksCount}`);
    console.log(`   –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${existingTasksCount}`);
    console.log(`   –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${mediaItems.length}`);
    console.log('');
    
    if (this.config.weeekSpaceOrProjectId) {
      console.log(`üìÅ –ü—Ä–æ–µ–∫—Ç: ${this.config.weeekSpaceOrProjectId}`);
    }
    console.log(`üè∑Ô∏è  –¢–µ–≥–∏: Photo –¥–ª—è —Ñ–æ—Ç–æ, Video –¥–ª—è –≤–∏–¥–µ–æ`);
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
   */
  private formatFileSize(bytes: number): string {
    const units = ['B', 'KB', 'MB', 'GB', 'TB'];
    let size = bytes;
    let unitIndex = 0;
    
    while (size >= 1024 && unitIndex < units.length - 1) {
      size /= 1024;
      unitIndex++;
    }
    
    return `${size.toFixed(1)} ${units[unitIndex]}`;
  }
} 