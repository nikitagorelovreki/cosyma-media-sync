/**
 * ‚ö†Ô∏è  DEPRECATED: WEEEK Task Builder
 * 
 * This module is deprecated and will be removed in future versions.
 * The main functionality of this application is Google Sheets export.
 * 
 * WEEEK integration is kept for backward compatibility only.
 * Do not use for new projects.
 */

import { MediaItem, WeeekTaskPayload, MediaType } from '../types';
import * as crypto from 'crypto';

export class TaskBuilder {
  /**
   * –°—Ç—Ä–æ–∏—Ç dedupId –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  static buildDedupId(item: MediaItem): string {
    const rootUrl = this.getRootUrl(item.sourcePublicUrl);
    const data = `${item.provider}|${rootUrl}|${item.pathKey}`;
    return crypto.createHash('sha1').update(data).digest('hex');
  }

  /**
   * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ—Ä–Ω–µ–≤–æ–π URL –∏–∑ –ø—É–±–ª–∏—á–Ω–æ–π —Å—Å—ã–ª–∫–∏
   */
  private static getRootUrl(publicUrl: string): string {
    try {
      const url = new URL(publicUrl);
      // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–π –ø—É—Ç—å
      return `${url.protocol}//${url.host}${url.pathname}`;
    } catch {
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å URL, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
      return publicUrl;
    }
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–¥–∞—á–∏
   */
  static buildTitle(item: MediaItem, dedupId: string): string {
    return item.fileName;
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
   */
  static buildDescription(item: MediaItem, dedupId: string): string {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –¥–ª—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    const linkUrl = item.directUrl || item.sourcePublicUrl;
    return `<a href="${linkUrl}" target="_blank">${linkUrl}</a>`;
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–≥ –¥–ª—è —Ç–∏–ø–∞ –º–µ–¥–∏–∞
   */
  static buildMediaTypeTag(mediaType: string): string | null {
    switch (mediaType) {
      case 'photo':
        return 'Photo';
      case 'video':
        return 'Video';
      default:
        return null;
    }
  }

  /**
   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–ª—è Original Upload Date
   */
  static buildOriginalDateValue(originalUploadedAt?: string): string | null {
    if (!originalUploadedAt) {
      return null;
    }
    
    try {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ISO —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–ª—è WEEEK
      const date = new Date(originalUploadedAt);
      if (isNaN(date.getTime())) {
        return null;
      }
      
      // –§–æ—Ä–º–∞—Ç YYYY-MM-DD
      return date.toISOString().split('T')[0];
    } catch {
      return null;
    }
  }

  /**
   * –°—Ç—Ä–æ–∏—Ç –ø–æ–ª–Ω—É—é –∑–∞–¥–∞—á—É WEEEK
   */
  static buildTask(
    item: MediaItem,
    config: {
      customFieldIds: {
        sourceUrlId: string;
        originalDateId: string;
        mediaTypeId: string;
      };
      projectId?: string;
    }
  ): WeeekTaskPayload {
    const dedupId = this.buildDedupId(item);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥ –¥–ª—è —Ç–∏–ø–∞ –º–µ–¥–∏–∞
    const mediaTag = this.buildMediaTypeTag(item.mediaType);
    const tags = mediaTag ? [mediaTag] : [];
    
    console.log(`üè∑Ô∏è  –°–æ–∑–¥–∞—é —Ç–µ–≥–∏ –¥–ª—è ${item.fileName}:`, tags);
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∫–æ–ª–æ–Ω–æ–∫
    const customFields: Record<string, any> = {};
    
    // –ö–æ–ª–æ–Ω–∫–∞ Link - –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª
    if (config.customFieldIds.sourceUrlId) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞, –∏–Ω–∞—á–µ –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É
      const linkUrl = item.directUrl || item.sourcePublicUrl;
      customFields[config.customFieldIds.sourceUrlId] = linkUrl;
    }
    
    // –ö–æ–ª–æ–Ω–∫–∞ Creation Date - –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if (config.customFieldIds.originalDateId && item.originalUploadedAt) {
      try {
        const date = new Date(item.originalUploadedAt);
        const isoDate = date.toISOString(); // ISO 8601 format –¥–ª—è datetime –ø–æ–ª—è
        customFields[config.customFieldIds.originalDateId] = isoDate;
      } catch (error) {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–∞—Ç—É, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        customFields[config.customFieldIds.originalDateId] = item.originalUploadedAt;
      }
    }
    
    // –ö–æ–ª–æ–Ω–∫–∞ Media Type - —Ç–∏–ø –º–µ–¥–∏–∞ (select –ø–æ–ª–µ)
    if (config.customFieldIds.mediaTypeId) {
      // –î–ª—è select –ø–æ–ª—è –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å ID –æ–ø—Ü–∏–∏, –∞ –Ω–µ —Ç–µ–∫—Å—Ç
      const mediaTypeOptionId = this.getMediaTypeOptionId(item.mediaType);
      customFields[config.customFieldIds.mediaTypeId] = mediaTypeOptionId;
    }
    
    console.log(`üîß –°–æ–∑–¥–∞—é –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –¥–ª—è ${item.fileName}:`, customFields);
    
    return {
      title: this.buildTitle(item, dedupId),
      description: this.buildDescription(item, dedupId),
      tags,
      customFields,
      projectId: config.projectId
    };
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –º–µ–¥–∏–∞
   */
  private static getMediaTypeDisplay(mediaType: string): string {
    switch (mediaType) {
      case 'photo':
        return '–§–æ—Ç–æ';
      case 'video':
        return '–í–∏–¥–µ–æ';
      default:
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç ID –æ–ø—Ü–∏–∏ –¥–ª—è select –ø–æ–ª—è Media Type (–ø—Ä–æ–µ–∫—Ç 16)
   */
  private static getMediaTypeOptionId(mediaType: string): string {
    switch (mediaType) {
      case 'photo':
        return '9fafcb55-9bfc-4e71-bfc3-9d1a142a278d'; // ID –æ–ø—Ü–∏–∏ "Photo"
      case 'video':
        return '9fafcb5e-4492-47b3-a79d-14de1c246cea'; // ID –æ–ø—Ü–∏–∏ "Video"
      default:
        return '9fafcb55-9bfc-4e71-bfc3-9d1a142a278d'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "Photo"
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   */
  private static getProviderDisplay(provider: string): string {
    switch (provider) {
      case 'yandex_disk':
        return '–Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫';
      case 'yandex_360':
        return '–Ø–Ω–¥–µ–∫—Å.360';
      case 'mailru':
        return 'Mail.ru Cloud';
      default:
        return provider;
    }
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ —á–∏—Ç–∞–µ–º–æ–º –≤–∏–¥–µ
   */
  private static formatFileSize(bytes: number): string {
    const units = ['B', 'KB', 'MB', 'GB', 'TB'];
    let size = bytes;
    let unitIndex = 0;
    
    while (size >= 1024 && unitIndex < units.length - 1) {
      size /= 1024;
      unitIndex++;
    }
    
    return `${size.toFixed(1)} ${units[unitIndex]}`;
  }
} 