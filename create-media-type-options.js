// –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ü–∏–π –¥–ª—è select –ø–æ–ª—è Media Type –≤ WEEEK
const axios = require('axios');
require('dotenv').config();

const WEEEK_API_TOKEN = process.env.WEEEK_API_TOKEN;
const MEDIA_TYPE_FIELD_ID = '9faeb00e-bce5-4ccb-accf-d2af3bff65da'; // ID –ø–æ–ª—è Media Type

if (!WEEEK_API_TOKEN) {
  console.error('‚ùå –ù–µ —É–∫–∞–∑–∞–Ω WEEEK_API_TOKEN –≤ .env');
  process.exit(1);
}

const weeekApi = axios.create({
  baseURL: 'https://api.weeek.net/public/v1',
  headers: {
    'Authorization': `Bearer ${WEEEK_API_TOKEN}`,
    'Content-Type': 'application/json'
  }
});

async function createMediaTypeOption(name, color) {
  try {
    console.log(`üîß –°–æ–∑–¥–∞—é –æ–ø—Ü–∏—é: ${name} (—Ü–≤–µ—Ç: ${color})`);
    
    const payload = {
      name: name,
      color: color // –ò—Å–ø–æ–ª—å–∑—É–µ–º enum –∑–Ω–∞—á–µ–Ω–∏—è: blue, light_blue, dark_purple, purple, dark_pink, pink, light_pink, red
    };
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é:', JSON.stringify(payload, null, 2));
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    const response = await weeekApi.post(`/tm/custom-fields/${MEDIA_TYPE_FIELD_ID}/options`, payload);
    
    console.log('‚úÖ –û–ø—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞:', JSON.stringify(response.data, null, 2));
    
    return response.data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–ø—Ü–∏–∏ "${name}":`, error.response?.data || error.message);
    return null;
  }
}

async function getCustomFieldOptions() {
  try {
    console.log('üîç –ü–æ–ª—É—á–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–ø—Ü–∏–∏ –¥–ª—è –ø–æ–ª—è Media Type...');
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    const response = await weeekApi.get(`/tm/custom-fields/${MEDIA_TYPE_FIELD_ID}/options`);
    
    console.log('üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–ø—Ü–∏–∏:', JSON.stringify(response.data, null, 2));
    
    return response.data;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø—Ü–∏–π:', error.response?.data || error.message);
    return null;
  }
}

async function runCreateOptions() {
  console.log('üöÄ –°–æ–∑–¥–∞—é –æ–ø—Ü–∏–∏ –¥–ª—è select –ø–æ–ª—è Media Type');
  console.log('üîë API —Ç–æ–∫–µ–Ω:', WEEEK_API_TOKEN.substring(0, 10) + '...');
  console.log('üè∑Ô∏è  ID –ø–æ–ª—è Media Type:', MEDIA_TYPE_FIELD_ID);
  
  // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–ø—Ü–∏–∏
  const existingOptions = await getCustomFieldOptions();
  
  if (existingOptions && existingOptions.length > 0) {
    console.log('\nüìã –ù–∞–π–¥–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–ø—Ü–∏–∏:');
    existingOptions.forEach(option => {
      console.log(`  - ${option.name} (ID: ${option.id})`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω—É–∂–Ω—ã–µ –æ–ø—Ü–∏–∏
    const hasPhoto = existingOptions.some(opt => 
      opt.name.toLowerCase().includes('—Ñ–æ—Ç–æ') || 
      opt.name.toLowerCase().includes('photo')
    );
    
    const hasVideo = existingOptions.some(opt => 
      opt.name.toLowerCase().includes('–≤–∏–¥–µ–æ') || 
      opt.name.toLowerCase().includes('video')
    );
    
    if (hasPhoto && hasVideo) {
      console.log('\n‚úÖ –ù—É–∂–Ω—ã–µ –æ–ø—Ü–∏–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç!');
      console.log('üîß ID –¥–ª—è —Ö–∞—Ä–¥–∫–æ–¥–∞:');
      existingOptions.forEach(option => {
        if (option.name.toLowerCase().includes('—Ñ–æ—Ç–æ') || option.name.toLowerCase().includes('photo')) {
          console.log(`  –§–æ—Ç–æ: ${option.id}`);
        }
        if (option.name.toLowerCase().includes('–≤–∏–¥–µ–æ') || option.name.toLowerCase().includes('video')) {
          console.log(`  –í–∏–¥–µ–æ: ${option.id}`);
        }
      });
      return;
    }
  }
  
  // –°–æ–∑–¥–∞–µ–º –æ–ø—Ü–∏–∏
  console.log('\nüîß –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–µ –æ–ø—Ü–∏–∏...');
  
  const photoOption = await createMediaTypeOption('–§–æ—Ç–æ', 'blue');
  const videoOption = await createMediaTypeOption('–í–∏–¥–µ–æ', 'red');
  
  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–û–ó–î–ê–ù–ò–Ø:');
  console.log('=' .repeat(50));
  
  if (photoOption) {
    console.log(`‚úÖ –§–æ—Ç–æ: ${photoOption.option.id}`);
  }
  
  if (videoOption) {
    console.log(`‚úÖ –í–∏–¥–µ–æ: ${videoOption.option.id}`);
  }
  
  if (photoOption && videoOption) {
    console.log('\nüîß ID –¥–ª—è —Ö–∞—Ä–¥–∫–æ–¥–∞:');
    console.log(`  –§–æ—Ç–æ: ${photoOption.option.id}`);
    console.log(`  –í–∏–¥–µ–æ: ${videoOption.option.id}`);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ü–∏–π
runCreateOptions().catch(console.error); 