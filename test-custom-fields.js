// –¢–µ—Å—Ç –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π WEEEK API
const axios = require('axios');
require('dotenv').config();

const WEEEK_API_TOKEN = process.env.WEEEK_API_TOKEN;
const PROJECT_ID = process.env.WEEEK_SPACE_OR_PROJECT_ID;

if (!WEEEK_API_TOKEN || !PROJECT_ID) {
  console.error('‚ùå –ù–µ —É–∫–∞–∑–∞–Ω—ã WEEEK_API_TOKEN –∏–ª–∏ WEEEK_SPACE_OR_PROJECT_ID –≤ .env');
  process.exit(1);
}

const weeekApi = axios.create({
  baseURL: 'https://api.weeek.net/public/v1',
  headers: {
    'Authorization': `Bearer ${WEEEK_API_TOKEN}`,
    'Content-Type': 'application/json'
  }
});

// ID –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π –∏–∑ –≤–∞—à–µ–≥–æ WEEEK
const CUSTOM_FIELDS = {
  MEDIA_TYPE: '9faeb00e-bce5-4ccb-accf-d2af3bff65da',    // Media Type (select)
  LINK: '9faeb02c-4521-480f-aeaf-54e2a234b2ae',          // Link (link)
  CREATION_DATE: '9faeb096-8a8d-401c-95c9-0a38e6c87a80'  // Creation Date (datetime)
};

async function testCustomFieldFormat(formatName, payload) {
  try {
    console.log(`\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é —Ñ–æ—Ä–º–∞—Ç: ${formatName}`);
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é:', JSON.stringify(payload, null, 2));
    
    const response = await weeekApi.post('/tm/tasks', payload);
    
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞:', response.data.task.id);
    console.log('üìã –û—Ç–≤–µ—Ç —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–æ–ª—è–º–∏:', JSON.stringify(response.data.task.customFields, null, 2));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–∏–ª–∏—Å—å –ª–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è
    const hasValues = response.data.task.customFields.some(field => field.value !== null);
    console.log(`üéØ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã: ${hasValues ? '–î–ê' : '–ù–ï–¢'}`);
    
    return { success: true, taskId: response.data.task.id, hasValues };
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ${formatName}:`, error.response?.data || error.message);
    return { success: false, error: error.response?.data || error.message };
  }
}

async function runTests() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –ø–æ–ª–µ–π WEEEK API');
  console.log('üìÅ –ü—Ä–æ–µ–∫—Ç ID:', PROJECT_ID);
  console.log('üîë API —Ç–æ–∫–µ–Ω:', WEEEK_API_TOKEN.substring(0, 10) + '...');
  
  const results = [];
  
  // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ customFields
  const test1 = await testCustomFieldFormat('–ü—Ä–æ—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ customFields', {
    title: '–¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –º–∞—Å—Å–∏–≤',
    description: '–¢–µ—Å—Ç–∏—Ä—É—é –ø—Ä–æ—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ customFields',
    projectId: PROJECT_ID,
    customFields: [
      { id: CUSTOM_FIELDS.MEDIA_TYPE, value: '–§–æ—Ç–æ' },
      { id: CUSTOM_FIELDS.LINK, value: 'https://example.com/test' },
      { id: CUSTOM_FIELDS.CREATION_DATE, value: '2024-04-24' }
    ]
  });
  results.push({ name: '–ü—Ä–æ—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ customFields', ...test1 });
  
  // –¢–µ—Å—Ç 2: –û–±—ä–µ–∫—Ç customFields
  const test2 = await testCustomFieldFormat('–û–±—ä–µ–∫—Ç customFields', {
    title: '–¢–µ—Å—Ç 2: –û–±—ä–µ–∫—Ç customFields',
    description: '–¢–µ—Å—Ç–∏—Ä—É—é –æ–±—ä–µ–∫—Ç customFields',
    projectId: PROJECT_ID,
    customFields: {
      [CUSTOM_FIELDS.MEDIA_TYPE]: '–í–∏–¥–µ–æ',
      [CUSTOM_FIELDS.LINK]: 'https://example.com/video',
      [CUSTOM_FIELDS.CREATION_DATE]: '2024-04-25'
    }
  });
  results.push({ name: '–û–±—ä–µ–∫—Ç customFields', ...test2 });
  
  // –¢–µ—Å—Ç 3: –û—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
  const test3 = await testCustomFieldFormat('–û—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º', {
    title: '–¢–µ—Å—Ç 3: –û—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º',
    description: '–¢–µ—Å—Ç–∏—Ä—É—é –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º',
    projectId: PROJECT_ID,
    [`field_${CUSTOM_FIELDS.MEDIA_TYPE}`]: '–§–æ—Ç–æ',
    [`field_${CUSTOM_FIELDS.LINK}`]: 'https://example.com/photo',
    [`field_${CUSTOM_FIELDS.CREATION_DATE}`]: '2024-04-26'
  });
  results.push({ name: '–û—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º', ...test3 });
  
  // –¢–µ—Å—Ç 4: –í metadata
  const test4 = await testCustomFieldFormat('–í metadata', {
    title: '–¢–µ—Å—Ç 4: –í metadata',
    description: '–¢–µ—Å—Ç–∏—Ä—É—é –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –≤ metadata',
    projectId: PROJECT_ID,
    metadata: {
      mediaType: '–í–∏–¥–µ–æ',
      link: 'https://example.com/metadata',
      creationDate: '2024-04-27'
    }
  });
  results.push({ name: '–í metadata', ...test4 });
  
  // –¢–µ—Å—Ç 5: –í properties
  const test5 = await testCustomFieldFormat('–í properties', {
    title: '–¢–µ—Å—Ç 5: –í properties',
    description: '–¢–µ—Å—Ç–∏—Ä—É—é –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –≤ properties',
    projectId: PROJECT_ID,
    properties: {
      mediaType: '–§–æ—Ç–æ',
      link: 'https://example.com/properties',
      creationDate: '2024-04-28'
    }
  });
  results.push({ name: '–í properties', ...test5 });
  
  // –¢–µ—Å—Ç 6: –°–ª–æ–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è select –ø–æ–ª—è
  const test6 = await testCustomFieldFormat('–°–ª–æ–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è select', {
    title: '–¢–µ—Å—Ç 6: –°–ª–æ–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è select',
    description: '–¢–µ—Å—Ç–∏—Ä—É—é —Å–ª–æ–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è select –ø–æ–ª—è',
    projectId: PROJECT_ID,
    customFields: [
      { 
        id: CUSTOM_FIELDS.MEDIA_TYPE, 
        value: { 
          id: 'photo', 
          name: '–§–æ—Ç–æ',
          label: '–§–æ—Ç–æ'
        }
      },
      { id: CUSTOM_FIELDS.LINK, value: 'https://example.com/complex' },
      { id: CUSTOM_FIELDS.CREATION_DATE, value: '2024-04-29' }
    ]
  });
  results.push({ name: '–°–ª–æ–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è select', ...test6 });
  
  // –¢–µ—Å—Ç 7: –§–æ—Ä–º–∞—Ç –¥–ª—è datetime –ø–æ–ª—è
  const test7 = await testCustomFieldFormat('–§–æ—Ä–º–∞—Ç –¥–ª—è datetime', {
    title: '–¢–µ—Å—Ç 7: –§–æ—Ä–º–∞—Ç –¥–ª—è datetime',
    description: '–¢–µ—Å—Ç–∏—Ä—É—é —Ñ–æ—Ä–º–∞—Ç –¥–ª—è datetime –ø–æ–ª—è',
    projectId: PROJECT_ID,
    customFields: [
      { id: CUSTOM_FIELDS.MEDIA_TYPE, value: '–í–∏–¥–µ–æ' },
      { id: CUSTOM_FIELDS.LINK, value: 'https://example.com/datetime' },
      { 
        id: CUSTOM_FIELDS.CREATION_DATE, 
        value: {
          date: '2024-04-30',
          time: '12:00:00',
          timestamp: new Date('2024-04-30T12:00:00Z').getTime()
        }
      }
    ]
  });
  results.push({ name: '–§–æ—Ä–º–∞—Ç –¥–ª—è datetime', ...test7 });
  
  // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
  console.log('=' .repeat(60));
  
  results.forEach((result, index) => {
    const status = result.success ? '‚úÖ' : '‚ùå';
    const values = result.hasValues ? 'üéØ –ó–ê–ü–û–õ–ù–ï–ù–û' : '‚ùå –ü–£–°–¢–û';
    console.log(`${index + 1}. ${status} ${result.name}: ${values}`);
    if (result.taskId) {
      console.log(`   ID –∑–∞–¥–∞—á–∏: ${result.taskId}`);
    }
  });
  
  // –ù–∞—Ö–æ–¥–∏–º –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const bestResult = results.find(r => r.success && r.hasValues);
  if (bestResult) {
    console.log(`\nüéâ –õ–£–ß–®–ò–ô –§–û–†–ú–ê–¢: ${bestResult.name}`);
    console.log('‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!');
  } else {
    console.log('\nüòû –ù–∏ –æ–¥–∏–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª');
    console.log('üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω—ã –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runTests().catch(console.error); 