#!/usr/bin/env node
const axios = require('axios');

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testFile = {
  weblink: 'P1ZJ/WGntm7zig',
  fileName: 'DSC05390.JPG',
  mediaType: 'photo'
};

async function testAllMailruAPIs() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É—é –í–°–ï –≤–æ–∑–º–æ–∂–Ω—ã–µ API Mail.ru –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∏–Ω–∏–∞—Ç—é—Ä...\n');

  const apis = [
    // 1. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ API –º–∏–Ω–∏–∞—Ç—é—Ä
    {
      name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π API –º–∏–Ω–∏–∞—Ç—é—Ä (img.imgsmail.ru)',
      url: `https://img.imgsmail.ru/thumbnails/${testFile.weblink}/${testFile.fileName}?size=200x200`
    },
    {
      name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π API –º–∏–Ω–∏–∞—Ç—é—Ä (–±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞)',
      url: `https://img.imgsmail.ru/thumbnails/${testFile.weblink}/${testFile.fileName}`
    },
    
    // 2. API —á–µ—Ä–µ–∑ cloud.mail.ru
    {
      name: 'API —Ñ–∞–π–ª–∞ (cloud.mail.ru)',
      url: `https://cloud.mail.ru/api/v2/file?weblink=${testFile.weblink}&path=${testFile.fileName}`
    },
    {
      name: 'API –ø–∞–ø–∫–∏ (cloud.mail.ru)',
      url: `https://cloud.mail.ru/api/v2/folder?weblink=${testFile.weblink}&path=${testFile.fileName}`
    },
    
    // 3. –ü—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∞–π–ª—ã
    {
      name: '–ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª (GET)',
      url: `https://cloud.mail.ru/public/${testFile.weblink}/${testFile.fileName}`,
      method: 'GET'
    },
    {
      name: '–ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª (HEAD)',
      url: `https://cloud.mail.ru/public/${testFile.weblink}/${testFile.fileName}`,
      method: 'HEAD'
    },
    
    // 4. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    {
      name: '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –¥–æ–º–µ–Ω (mail.ru)',
      url: `https://mail.ru/cloud/public/${testFile.weblink}/${testFile.fileName}`
    },
    
    // 5. API —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π (–ø–æ–ø—Ä–æ–±—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞)
    {
      name: 'API —Å —Ç–æ–∫–µ–Ω–æ–º (–±–µ–∑ —Ç–æ–∫–µ–Ω–∞)',
      url: `https://cloud.mail.ru/api/v2/thumbnail?weblink=${testFile.weblink}&path=${testFile.fileName}&size=200x200`
    },
    
    // 6. –°—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ API
    {
      name: 'API v1 (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è)',
      url: `https://cloud.mail.ru/api/v1/file?weblink=${testFile.weblink}&path=${testFile.fileName}`
    },
    
    // 7. –ü—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–∏–Ω–∏–∞—Ç—é—Ä—ã —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
    {
      name: '–ú–∏–Ω–∏–∞—Ç—é—Ä–∞ 100x100',
      url: `https://img.imgsmail.ru/thumbnails/${testFile.weblink}/${testFile.fileName}?size=100x100`
    },
    {
      name: '–ú–∏–Ω–∏–∞—Ç—é—Ä–∞ 150x150',
      url: `https://img.imgsmail.ru/thumbnails/${testFile.weblink}/${testFile.fileName}?size=150x150`
    },
    {
      name: '–ú–∏–Ω–∏–∞—Ç—é—Ä–∞ 300x300',
      url: `https://img.imgsmail.ru/thumbnails/${testFile.weblink}/${testFile.fileName}?size=300x300`
    },
    
    // 8. API –¥–ª—è –≤–∏–¥–µ–æ
    {
      name: 'API –≤–∏–¥–µ–æ –º–∏–Ω–∏–∞—Ç—é—Ä—ã',
      url: `https://img.imgsmail.ru/thumbnails/${testFile.weblink}/${testFile.fileName}?type=video&size=320x240`
    }
  ];

  for (const api of apis) {
    console.log(`üìã ${api.name}:`);
    console.log(`üîó URL: ${api.url}`);
    
    try {
      const method = api.method || 'HEAD';
      const response = await axios({
        method: method,
        url: api.url,
        timeout: 10000,
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
          'Accept': 'image/*,application/json,*/*',
          'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8'
        }
      });
      
      console.log(`‚úÖ –°—Ç–∞—Ç—É—Å: ${response.status}`);
      console.log(`üìè Content-Type: ${response.headers['content-type'] || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log(`üìä Content-Length: ${response.headers['content-length'] || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      
      // –ï—Å–ª–∏ —ç—Ç–æ JSON –æ—Ç–≤–µ—Ç, –ø–æ–∫–∞–∂–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      if (response.headers['content-type'] && response.headers['content-type'].includes('application/json')) {
        console.log(`üìÑ JSON –æ—Ç–≤–µ—Ç: ${JSON.stringify(response.data, null, 2).substring(0, 200)}...`);
      }
      
    } catch (error) {
      if (error.response) {
        console.log(`‚ùå –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
        console.log(`üö´ –û—à–∏–±–∫–∞: ${error.response.statusText}`);
        
        // –ü–æ–∫–∞–∂–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        if (error.response.headers) {
          console.log(`üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏: ${JSON.stringify(error.response.headers, null, 2).substring(0, 200)}...`);
        }
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }
    
    console.log('---\n');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testAllMailruAPIs().catch(console.error); 