// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–≥–æ–≤ WEEEK
const { WeeekClient } = require('./dist/weeek/client');
const { ConfigLoader } = require('./dist/config');

async function testTags() {
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const config = ConfigLoader.load();
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç WEEEK
    const weeekClient = new WeeekClient(config);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å WEEEK...');
    if (!await weeekClient.testConnection()) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WEEEK API');
    }
    console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å WEEEK —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏
    console.log('üè∑Ô∏è  –ü–æ–ª—É—á–∞—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–≥–∏...');
    const tags = await weeekClient.getTags();
    console.log('üìã –¢–µ–≥–∏ –≤ WEEEK:', tags);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTags(); 